var express = require('express');
var router = express.Router();
var path = require('path');
var db = require('../dbconnector');
var bcrypt = require('bcrypt');
var middleware = require('../middleware/auth');

var saltRounds = 10;


router.get('/signup', (req, res) => {
        console.log('signin');
        res.sendFile(path.join(__dirname, '../views', 'inscription.html'));
});

router.post('/signup', (req, res) => {
       //TODO: Implement user registration
// Extract user data from request body

var { username, name, password } = req.body;
console.log(username);

// Check if username and password are provided
if (!username || !password || !name) {
        return res.status(400).json({ error: 'Username and password are required' });
}

// Check if user already exists in the database
//TODO: Hash the user password
password = bcrypt.hashSync(password, saltRounds);



// Add the new user to the database
var sql = 'INSERT INTO users (username, password, name) VALUES (?, ?, ?)';

db.query(sql, [username, password, name], (err, result) => {
        if (err) {
                console.log('Error registering user');
                return res.status(500).json({ error: 'Error registering user' });
        }
        console.log('User registered successfully');
});

// Redirect or send response indicating successful registration
res.redirect('/auth/login');
});

router.get('/login', (req, res) => {
        console.log('signup');
        res.sendFile(path.join(__dirname, '../views', 'connexion.html'));
});

router.post('/login', (req, res) => {

        var { username, password } = req.body;
        console.log(req.body);
        console.log(username);
        console.log(password);

        // Check if username and password are provided
        if (!username || !password) {
                return res.status(400).json({ error: 'Username and password are required' });
        }
        result = null;
        var sql = 'SELECT * FROM users WHERE username = ?';
        db.query(sql, [username], (err, result) => {
                if(err){
                        console.log('Error retrieving user');
                        return res.status(500).json({ error: 'Error retrieving user' });
                }
                if(result.length === 0){
                        return res.status(401).json({ error: 'Invalid username' });
                }
                result = result;
                console.log(result);
                console.log("result")
                password = bcrypt.compareSync(password, result[0].password);
                console.log(password);
                if(!password){
                        return res.status(401).json({ error: 'Invalid username or password' });
                }
                var user = {
                        username: result[0].username,
                        name: result[0].name
                };
                
                token = middleware.generateAccessToken(user);
                console.log('Access token generated successfully');
                console.log(token);
                res.cookie('token', token, { httpOnly: true });
                res.redirect('/home');
        

        }
        );


        


        // Check if user exists in the database
        
        
               
        
});


router.get('/logout', (req, res) => {
        res.clearCookie('token');
        res.redirect('/home');
});



module.exports = router;